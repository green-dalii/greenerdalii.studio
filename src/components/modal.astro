---
const { btnText, btnAltText, mTitle, mId, mFooter } = Astro.props;
---

<button id="open-modal-button" class="btn mt-4 w-full sm:btn-neutral sm:w-auto group relative">
    <span
        class={`block transition-opacity duration-300 ease-in-out group-hover:opacity-0`}
        >{btnText}</span
    >
    <span
        class="absolute left-0 top-0 block w-full min-w-max pt-3 text-center opacity-0 transition-opacity duration-300 ease-in-out text-xs group-hover:opacity-100"
    >
        {btnAltText}
    </span>
</button>

<div
    id=`${mId}`
    data-modal-id="${mId}"
    class="h-modal fixed left-0 right-0 top-0 z-50 hidden w-full overflow-y-auto overflow-x-hidden p-4 backdrop-blur md:inset-0 md:h-full"
>
    <div id="modal-backdrop" class="fixed inset-0 bg-black opacity-50"></div>
    <div
        id="modal-content"
        class="relative mx-auto w-full rounded-lg bg-[--color-background-offset] shadow sm:w-[48rem]"
    >
        <div
            class="modal-header flex items-start justify-between rounded-t border-b border-[--color-border] p-4"
        >
            <h3 class="font-medium">
                {mTitle}
            </h3>
            <button
                type="button"
                class="ml-auto inline-flex items-center rounded-lg bg-transparent p-1.5 text-gray-400 text-sm hover:bg-gray-200 hover:text-gray-900 dark:hover:bg-gray-600 dark:hover:text-white"
                data-modal-hide="modal"
            >
                <svg
                    class="h-5 w-5"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                    xmlns="http://www.w3.org/2000/svg"
                    ><path
                        fill-rule="evenodd"
                        d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                        clip-rule="evenodd"></path></svg
                >
                <span class="sr-only">Close modal</span>
            </button>
        </div>
        <div class="modal-body relative space-y-6 p-6">
            <slot />
        </div>
        <div
            class="modal-footer flex items-center justify-end space-x-2 rounded-b border-t border-[--color-border]"
        >
            <span class="text-xs">{mFooter}</span>
        </div>
    </div>
</div>

<script>
    const modal = document.querySelector("[data-modal-id]");
    const backdrop = document.getElementById("modal-backdrop");
    const closeButton = document.querySelector('[data-modal-hide="modal"]');

    function openModal() {
        modal.style.display = "block";
        backdrop.style.display = "block";
        document.body.style.overflow = "hidden";
    }

    function closeModal() {
        modal.style.display = "none";
        backdrop.style.display = "none";
        document.body.style.overflow = "";
    }

    // Example: bind the open modal function to a button
    document
        .getElementById("open-modal-button")
        .addEventListener("click", openModal);

    // // Close modal when clicking on the backdrop
    // backdrop.addEventListener("click", closeModal);

    // Close modal when clicking the close button
    closeButton.addEventListener("click", closeModal);

    // Close modal when pressing the escape key
    window.addEventListener("keydown", function (event) {
        if (event.key === "Escape") {
            closeModal();
        }
    });
</script>
